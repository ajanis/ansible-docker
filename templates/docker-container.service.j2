[Unit]
Description={{ item.value.description }}

# Start docker container dependencies before starting this container
After=docker.service {% if item.value.depends_on is defined %}{% for container in item.value.depends_on %}docker-{{ container|regex_replace('_','-') }}.service{% if not loop.last %} {% endif %}{% endfor %}{% endif %}

{% if shared_storage and (item.value.volumes is search(data_mount_root)) %}

# Ensure shared storage is mounted
ConditionPathIsMountPoint={{ data_mount_root }}

# Require mounts and services
Requires={{ data_mount_root | regex_replace('^\\/', '') }}.mount docker.service {% if item.value.depends_on is defined %}{% for container in item.value.depends_on %}docker-{{ container|regex_replace('_','-') }}.service{% if not loop.last %} {% endif %}{% endfor %}{% endif %}

# ensure mount path is r/w
ConditionPathIsReadWrite={{ data_mount_root }}

# Restart if mount service restarts
ReloadPropagatedFrom={{ data_mount_root | regex_replace('^\\/', '') }}.mount

{% else %}

# Require docker and docker container dependencies before starting
Requires=docker.service {% if item.value.depends_on is defined %}{% for container in item.value.depends_on %}docker-{{ container|regex_replace('_','-') }}.service{% if not loop.last %} {% endif %}{% endfor %}{% endif %}

{% endif %}

[Service]
Restart=always
ExecStart=/usr/bin/docker start -a {{ item.key }}
ExecStop=/usr/bin/docker stop -t 2 {{ item.key }}
RestartSec=1min

[Install]
WantedBy=multi-user.target {% if shared_storage and (data_mount_root|length > 0) %}{{ data_mount_root|regex_replace('^\\/', '') }}.mount{% else %}{% endif %}
